from cs1graphics import *
from time import sleep

canvas = Canvas(320,193)
canvas.setBackgroundColor('black')

layer = Layer()

moon = Circle(33)
moon.setFillColor('white')
moon.setBorderColor('white')
layer.add(moon)
moon.moveTo(33,160)
moon.setDepth(1)

canvas.add(layer)

def y(x):
  y = (-0.007874)*(x-160+33)**2-33+160
  return -y
#starting point(33,160),middle point(160,33),ending point(287,160)을 지나는 2차함수
#starting point에서 254회 움직인 후 ending point에 도달시키기 위해 맞춤

def color(thing,I):
  thing.setFillColor((0,0,I))
  thing.setBorderColor((0,0,I))

def r1(I):
  r = 33+(2**7-33)*I/63
  return r

def shadow_add(r,I):
  k = (r**2-33**2)**(1/2)
  shadow_x = I+33+k
  shadow_y = 160+y(I)
  shadow[I] = Circle(r)
  color(shadow[I],I)
  canvas.add(shadow[I])
  shadow[I].setDepth(2)
  shadow[I].moveTo(shadow_x,shadow_y)
  canvas.remove(shadow[I-1])

shadow[254] = Circle()
shadow[0] = Circle(33)
color(shadow[0],0)
canvas.add(shadow[0])

for i in range(254):
  canvas.setBackgroundColor((0,0,i)) #background color change
  layer.moveTo(i,y(i)) #moon movement (quadratic path)
  shadow_add(r1(i),i)

  sleep(0.1)
